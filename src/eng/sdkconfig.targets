<!-- Copyright (c) Microsoft Corporation. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<Project>
  <!-- 
      NuGet will see both the latest package from the .NET SDK and
      the one we are overriding to and thereby emit an warning.
      Disabling that warning here.
   -->
  <PropertyGroup Condition="$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net8.0'))">
    <DisableCheckingDuplicateNuGetItems>true</DisableCheckingDuplicateNuGetItems>
  </PropertyGroup>

  <!--
      Generally, the Microsoft.Windows.SDK.NET.Ref pack is bundled with the .NET SDK. Sometimes we need to override it, and it
      has to be done after the Microsoft.NET.SDK has been imported, which means it needs to be in either the .csproj itself,
      or a .targets file.  With .NET 9, the package name changed to Microsoft.Windows.SDK.NET.Ref.Windows.  So we'll just remove
      any version we find before adding our explicitly versioned reference.
   -->
  <ItemGroup Condition="'$(UsingMicrosoftNETSdk)'=='true' and '$(MicrosoftWindowsSDKNetRefPackVersionSuffixOverride)'!='' and $([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net6.0-windows'))">
    <FrameworkReference Remove="Microsoft.Windows.SDK.NET.Ref;Microsoft.Windows.SDK.NET.Ref.Windows" />
    <FrameworkReference Include="Microsoft.Windows.SDK.NET.Ref"
                        IsImplicitlyDefined="true"
                        Pack="false"
                        PrivateAssets="All"
                        TargetingPackVersion="$(TargetPlatformVersion.TrimEnd('0'))$(MicrosoftWindowsSDKNetRefPackVersionSuffixOverride)"
                        RuntimeFrameworkVersion="$(TargetPlatformVersion.TrimEnd('0'))$(MicrosoftWindowsSDKNetRefPackVersionSuffixOverride)" />
  </ItemGroup>
</Project>